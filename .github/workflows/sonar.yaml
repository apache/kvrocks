# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: SonarCloud Analysis

on:
  workflow_run:
    workflows: [CI]
    types: [completed]

jobs:
  sonarcloud:
    name: Upload to SonarCloud
    runs-on: ubuntu-22.04
    if: github.event.workflow_run.conclusion == 'success' && github.repository_owner == 'apache'
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v3
      - name: 'Download code coverage'
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "sonarcloud-data"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/sonarcloud-data.zip`, Buffer.from(download.data));
      - name: 'Unzip code coverage'
        run: |
          unzip sonarcloud-data.zip
          mv _build build
          mkdir -p build/CMakeFiles/CMakeTmp
          ls -a sonarcloud-data build

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: |
          PR_NUMBER=$(jq -r '.number | select (.!=null)' sonarcloud-data/github-event.json)
          echo "The PR number is $PR_NUMBER"

          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="sonarcloud-data" \
            --define sonar.coverageReportPaths=sonarcloud-data/coverage.xml \
            --define sonar.projectKey=apache_kvrocks \
            --define sonar.organization=apache \
            --define sonar.scm.revision=${{ github.event.workflow_run.head_sha }} \
            --define sonar.pullrequest.key=$PR_NUMBER \
            --define sonar.pullrequest.base=unstable \
            --define sonar.pullrequest.branch=${{ github.head_ref || github.ref_name }}
